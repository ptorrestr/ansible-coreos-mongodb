[Unit]
Description=mongod service
After=docker.service
Requires=docker.service
After=etcd.service
Requires=etcd.service
After=mongodata.%i.service
Requires=mongodata.%i.service

[Service]
KillMode=none
TimeoutStartSec=360
TimeoutStopSec=360
EnvironmentFile=/etc/environment
Environment=INSTANCE=%i
ExecStartPre=/bin/bash -c "/usr/bin/docker pull {{mongodb-image-name}}"
ExecStartPre=-/bin/bash -c "/usr/bin/docker rm -f mongodb"
ExecStart=/bin/bash -c "\
          set -e; \
          REPLICA_NAME=$(etcdctl get /mongo/replica/name 2>/dev/null || true); \
          REPLICA_KEY=$(etcdctl get /mongo/replica/key 2>/dev/null || true); \
          MONGO_ARGS=\"--smallfiles\"; \
          if [ -n \"$REPLICA_KEY\" ]; \
          then \
                echo \"replica is ready to start \"; \
                MONGO_ARGS=\"--replSet=$REPLICA_NAME --keyFile=/data/db/replica.key\"; \
                docker run -t -i --entrypoint /bin/bash --volumes-from mongodata%i \
                    {{mongodb-image-name}} -c \"echo $REPLICA_KEY > /data/db/replica.key\"; \
                docker run -t -i --entrypoint /bin/bash --volumes-from mongodata%i \
                    {{mongodn-image-name}} -c \"chmod 600 /data/db/replica.key\"; \
                etcdctl set /mongo/replica/switched_to_replica_mode true; \
          else \
                if [ \"$INSTANCE\" -ne \"1\" ]; \
                then \
                    echo \"replica is not yet ready for others\"; \
                    /usr/bin/sleep 60; \
                    exit 1; \
                fi; \
                echo \"starting first node to configure\"; \
          fi; \
          docker run -p 27017:27017 --name mongodb \
              --volumes-from mongodata%i \
              {{mongodb-image-name}} mongod $MONGO_ARGS;"

ExecStartPost=/bin/bash -c "set -e; \
          echo 'EXEC START POST STEP'; \
          etcdctl set /mongo/replica/nodes/$COREOS_PRIVATE_IPV4/port 27017; \
          etcdctl set /mongo/replica/nodes/$COREOS_PRIVATE_IPV4/status on; \
          REPLICA_KEY=$(/usr/bin/etcdctl get /mongo/replica/key 2>/dev/null || true); \
          \
          if [ -n \"$REPLICA_KEY\" ]; then exit 0; fi; \
          if [ \"$INSTANCE\" -ne \"1\" ]; then exit 0; fi; \
          \
          SITE_ROOT_PWD=$(etcdctl get /mongo/replica/siteRootAdmin/pwd || \
                          etcdctl set /mongo/replica/siteRootAdmin/pwd $(openssl rand -base64 32)); \
          SITE_USR_ADMIN_PWD=$(etcdctl get /mongo/replica/siteUserAdmin/pwd || \
                               etcdctl set /mongo/replica/siteUserAdmin/pwd $(openssl rand -base64 32)); \
          echo 'Creating the siteUserAdmin... '; \
          docker run -t --volumes-from mongodata%i \
            {{mongodb-image-name}} mongo $COREOS_PRIVATE_IPV4/admin \
            --eval \"db.createUser({user:'siteUserAdmin', pwd:'$SITE_USR_ADMIN_PWD',roles: [{role:'userAdminAnyDatabase', db:'admin'}, 'readWrite' ]});\"; \
          echo 'Creating the siteRootAdmin... '; \
          docker run -t --volumes-from mongodata%i \
            {{mongodb-image-name}} mongo $COREOS_PRIVATE_IPV4/admin \
            --eval \"db.createUser({user:'siteRootAdmin', pwd:'$SITE_ROOT_PWD',roles: [{role:'root', db:'admin'}, 'readWrite' ]});\"; \
          \
          etcdctl set /mongo/replica/key $(openssl rand -base64 741); \
          \
          echo restarting now... ; \
          /usr/bin/sleep 10; \
          exit 1;"

ExecStop=/bin/bash -c -v '\
          /usr/bin/docker stop -t 60 mongodb || true; \
'
ExecStopPost=-/bin/bash -c 'set -e; \
          etcdctl set /mongo/replica/nodes/$COREOS_PRIVATE_IPV4/status off; \
          etcdctl rm /mongo/replica/nodes/$COREOS_PRIVATE_IPV4 --recursive; \
          etcdctl rm /mongo/replica/configured; \
          etcdctl rm /mongo/replica/url; \
          etcdctl rm /mongo/replica/rs_init_done; \
          etcdctl rm /mongo/replica/rs_config_done; \
          etcdctl rm /mongo/replica/rs_adding_node_done; \
          etcdctl rm /mongo/replica/switched_to_replica_mode; \
'

Restart=on-failure

[X-Fleet]
X-Conflicts=%p.*.service
Conflicts=%p.*.service
MachineOf=mongodata.%i.service
