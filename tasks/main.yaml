---
# Create docker directory for mongo data
- name: Create docker directory for mongodata
  file: path="{{ playbook_dir }}/docker/docker-mongodata" state=directory
  tags:
    - configuration

- name: Create Mongodata Dockerfile
  template: src=mongodata-dockerfile.j2 dest="{{ playbook_dir }}/docker/docker-mongodata/Dockerfile"
  tags:
    - configuration

- name: Copy extra files for Mongodata image
  copy: src="{{ item }}" dest="{{ playbook_dir }}/docker/docker-mongodata/{{ item }}"
  with_items:
    - "forever.sh"
  tags:
    - configuration

- name: Build Mongodata image
  docker_image: docker_url="tcp://{{ registry_hostname }}":2375 path="{{ playbook_dir }}/docker/docker-mongodata" name="{{ mongodata_image_name }}" state="build"
  tags:
    - docker
    - docker_build

- name: Push Mongodata image to repo
  shell: "docker -H tcp://{{ registry_hostname }}:2375 push {{ mongodata_image_name }}"
  tags:
    - docker
    - docker_push

# Repeat same steps for mongo images
- name: Create docker directories for mongodb
  file: path="{{ playbook_dir }}/docker/{{ item }}" state=directory
  with_items:
    - "mongo"
    - "mongod"
    - "mongoc"
    - "mongos"
  tags:
    - configuration

- name: Create Mongodb Dockerfiles
  template: src="{{ item }}-dockerfile.j2" dest="{{ playbook_dir }}/docker/{{ item }}/Dockerfile"
  with_items:
    - "mongo"
    - "mongod"
    - "mongoc"
    - "mongos"
  tags:
    - configuration

- name: Copy extra files for Mongod image
  copy: src="{{ item }}" dest="{{ playbook_dir }}/docker/mongod/{{ item }}"
  with_items:
    - "mongod.conf"
  tags:
    - configuration

- name: Copy extra files for Mongoc image
  copy: src="{{ item }}" dest="{{ playbook_dir }}/docker/mongoc/{{ item }}"
  with_items:
    - "mongoc.conf"
  tags:
    - configuration

- name: Copy extra files for Mongos image
  copy: src="{{ item }}" dest="{{ playbook_dir }}/docker/mongos/{{ item }}"
  with_items:
    - "mongos.conf"
  tags:
    - configuration

- name: Create key file for Mongo
  shell: "openssl rand -base64 741 > {{ playbook_dir }}/docker/mongo/keyfile && chmod 600 {{ playbook_dir }}/docker/mongo/keyfile"
  tags:
    - configuration

- name: Build Mongodb images
  docker_image: docker_url="tcp://{{ registry_hostname }}:2375" path="{{ playbook_dir }}/docker/{{ item.name }}" name="{{ item.image }}" state="build"
  with_items:
    - { name: "mongo", image: "{{ mongo_image_name }}" }
    - { name: "mongod", image: "{{ mongod_image_name }}" }
    - { name: "mongoc", image: "{{ mongoc_image_name }}" }
    - { name: "mongos", image: "{{ mongos_image_name }}" }
  tags:
    - docker
    - docker_build

- name: Push Mongodb images to repo
  shell: "docker -H tcp://{{ registry_hostname }}:2375 push {{ item }}"
  with_items:
    - "{{ mongo_image_name }}"
    - "{{ mongod_image_name }}"
    - "{{ mongoc_image_name }}"
    - "{{ mongos_image_name }}"
  tags:
    - docker
    - docker_push

# Create units directory
- name: Create Units directory
  file: path="{{ playbook_dir }}/units" state=directory
  tags:
    - configuration

# Create units for mongodata
- name: Create Mongodata Units
  template: src=mongodata@x.service.j2 dest="{{ playbook_dir }}/units/mongodata@{{ item }}.service"
  with_sequence: count="{{ mongo_instances_number }}"
  tags:
    - configuration

- name: Submit Mongodata units
  shell: "fleetctl --tunnel {{ fleet_endpoint }} submit {{ playbook_dir }}/units/mongodata@{{ item }}.service"
  with_sequence: count="{{ mongo_instances_number }}"
  tags:
    - fleet
    - fleet_submit

- name: Start Mongodata units
  shell: "sleep 5 && fleetctl --tunnel {{ fleet_endpoint }} start {{ playbook_dir }}units/mongodata@{{ item }}.service"
  with_sequence: count="{{ mongo_instances_number }}"
  tags:
    - fleet
    - fleet_start

# Create units for mongod
- name: Create Mongod Units
  template: src=mongod@x.service.j2 dest="{{ playbook_dir }}/units/mongod@{{ item }}.service"
  with_sequence: count="{{ mongo_instances_number }}"
  tags:
    - configuration

- name: Submit Mongod units
  shell: "fleetctl --tunnel {{ fleet_endpoint }} submit {{ playbook_dir }}/units/mongod@{{ item }}.service"
  with_sequence: count="{{ mongo_instances_number }}"
  tags:
    - fleet
    - fleet_submit

- name: Start Mongod units
  shell: "sleep 5 && fleetctl --tunnel {{ fleet_endpoint }} start {{ playbook_dir }}units/mongod@{{ item }}.service"
  with_sequence: count="{{ mongo_instances_number }}"
  tags:
    - fleet
    - fleet_start

# Create units for mongoc
- name: Create Mongoc Units
  template: src=mongoc@x.service.j2 dest="{{ playbook_dir }}/units/mongoc@{{ item }}.service"
  with_sequence: count="{{ mongo_instances_number }}"
  tags:
    - configuration

- name: Submit Mongoc units
  shell: "fleetctl --tunnel {{ fleet_endpoint }} submit {{ playbook_dir }}/units/mongoc@{{ item }}.service"
  with_sequence: count="{{ mongo_instances_number }}"
  tags:
    - fleet
    - fleet_submit

- name: Start Mongoc units
  shell: "sleep 5 && fleetctl --tunnel {{ fleet_endpoint }} start {{ playbook_dir }}units/mongoc@{{ item }}.service"
  with_sequence: count={{ mongo_instances_number }}
  tags:
    - fleet
    - fleet_start

# Create units for mongos
- name: Create Mongos Units
  template: src=mongos@x.service.j2 dest="{{ playbook_dir }}/units/mongos@{{ item }}.service"
  with_sequence: count="1"
  tags:
    - configuration

- name: Submit Mongos units
  shell: "fleetctl --tunnel {{ fleet_endpoint }} submit {{ playbook_dir }}/units/mongos@{{ item }}.service"
  with_sequence: count="1"
  tags:
    - fleet
    - fleet_submit

- name: Start Mongos units
  shell: "sleep 5 && fleetctl --tunnel {{ fleet_endpoint }} start {{ playbook_dir }}units/mongos@{{ item }}.service"
  with_sequence: count="1"
  tags:
    - fleet
    - fleet_start

# Initalise Mongos Units
- name: Create Mongos-Init Units
  template: src=mongosinit@x.service.j2 dest="{{ playbook_dir }}/units/mongosinit@{{ item }}.service"
  with_sequence: count="1"
  tags:
    - configuration

- name: Submit Mongos-Init Units
  shell: "fleetctl --tunnel {{ fleet_endpoint }} submit {{ playbook_dir }}/units/mongosinit@{{ item }}.service"
  with_sequence: count="1"
  tags:
    - configuration

- name: Start Mongos-Init Units
  shell: "sleep 5 && fleetctl --tunnel {{ fleet_endpoint }} start {{ playbook_dir }}units/mongosinit@{{ item }}.service"
  with_sequence: count="1"
  tags:
    - fleet
    - fleet_start
