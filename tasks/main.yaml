---
# Create docker directory for mongo data
- name: Create docker directory for mongodata
  file: path="{{ playbook_dir }}/docker/docker-mongodata" state=directory
  tags:
    - configuration
- name: Create Mongodata Dockerfile
  template: src=mongodata-dockerfile.j2 dest="{{ playbook_dir }}/docker/docker-mongodata/Dockerfile"
  tags:
    - configuration
- name: Build Mongodata image
  docker_image: docker_url="tcp://{{ registry_host }}":2375 path="{{ playbook_dir }}/docker/docker-mongodata" name="{{ mongodata_image_name }}" state="build"
  tags:
    - docker
    - docker_build
- name: Push Mongodata image to repo
  shell: "docker -H tcp://{{ registry_host }}:2375 push {{ mongodata_image_name }}"
  tags:
    - docker
    - docker_push

# Repeat same steps for mongo images
- name: Create docker directories for mongodb
  file: path="{{ playbook_dir }}/docker/{{ item }}" state=directory
  with_items:
    - "mongo"
    - "mongod"
    - "mongoc"
    - "mongos"
  tags:
    - configuration

- name: Create Mongodb Dockerfiles
  template: src="{{ item }}-dockerfile.j2" dest="{{ playbook_dir }}/docker/{{ item }}/Dockerfile"
  with_items:
    - "mongo"
    - "mongod"
    - "mongoc"
    - "mongos"
  tags:
    - configuration

- name: Copy extra files for Mongo images
  copy: src="{{ item.file }}" dest="{{ playbook_dir }}/docker/{{ item.name }}/{{ item.file }}"
  with_items:
    - { name: "mongod", file: "mongod.conf.tmpl" }
    - { name: "mongod", file: "mongod.toml" }
    - { name: "mongod", file: "confd-watch-mongod" }
    - { name: "mongod", file: "mongod" }
    - { name: "mongoc", file: "mongoc.conf.tmpl" }
    - { name: "mongoc", file: "mongoc.toml" }
    - { name: "mongoc", file: "confd-watch-mongoc" }
    - { name: "mongoc", file: "mongoc" }
    - { name: "mongos", file: "mongos.conf.tmpl" }
    - { name: "mongos", file: "mongos.toml" }
    - { name: "mongos", file: "confd-watch-mongos" }
    - { name: "mongos", file: "mongos" }
  tags:
    - configuration

- name: Create key file for Mongo
  shell: "openssl rand -base64 741 > {{ playbook_dir }}/docker/mongo/keyfile && chmod 600 {{ playbook_dir }}/docker/mongo/keyfile"
  tags:
    - configuration

- name: Build Mongodb images
  docker_image: docker_url="tcp://{{ registry_host }}:2375" path="{{ playbook_dir }}/docker/{{ item.name }}" name="{{ item.image }}" state="build"
  with_items:
    - { name: "mongo", image: "{{ mongo_image_name }}" }
    - { name: "mongod", image: "{{ mongod_image_name }}" }
    - { name: "mongoc", image: "{{ mongoc_image_name }}" }
    - { name: "mongos", image: "{{ mongos_image_name }}" }
  tags:
    - docker
    - docker_build

- name: Push Mongodb images to repo
  shell: "docker -H tcp://{{ registry_host }}:2375 push {{ item }}"
  with_items:
    - "{{ mongo_image_name }}"
    - "{{ mongod_image_name }}"
    - "{{ mongoc_image_name }}"
    - "{{ mongos_image_name }}"
  tags:
    - docker
    - docker_push

# Create units directory
- name: Create Units directory
  file: path="{{ playbook_dir }}/units" state=directory
  tags:
    - configuration

# Create units for mongo
- name: Create Mongo Units
  template: src={{ item }}.service.j2 dest="{{ playbook_dir }}/units/{{ item }}.service"
  with_items:
    - "mongodata@"
    - "mongod@"
    - "mongoc@"
    - "mongos@"
    - "mongosinit@"
  tags:
    - configuration

- name: Submit Mongo Units
  shell: "fleetctl submit {{ playbook_dir }}/units/{{ item }}.service"
  with_items:
    - "mongodata@"
    - "mongod@"
    - "mongoc@"
    - "mongos@"
    - "mongosinit@"
  tags:
    - fleet
    - fleet_submit

- name: Start Mongo units
  shell: "fleetctl start {{ playbook_dir }}units/{{ item }}.service"
  with_items:
    - "mongodata@2000"
    - "mongodata@2001"
    - "mongodata@2002"
    - "mongod@2000"
    - "mongod@2001"
    - "mongod@2002"
    - "mongoc@2020"
    - "mongoc@2021"
    - "mongoc@2022"
    - "mongos@2030"
    - "mongosinit@2030"
  tags:
    - fleet
    - fleet_start
